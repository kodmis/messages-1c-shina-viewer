#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСообщенияКанала(РазмерВыборкиСообщений = 100) Экспорт

	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	СообщенияДляОтображения = СервисыИнтеграции[СервисИнтеграции][КаналСервисаИнтеграции]
					.ВыбратьСообщения(, РазмерВыборкиСообщений);
			
	СообщенияШины.Очистить();
	Для Каждого СообщениеИнтеграции Из СообщенияДляОтображения Цикл
		
		ДобавитьСтрокуСообщенийШины(СообщениеИнтеграции);
	КонецЦикла;
КонецПроцедуры

Процедура НайтиСообщениеКаналаПоТелу(СтрокаПоиска) Экспорт
	Перем НайденноеСообщение;
	ВсеСообщения = СервисыИнтеграции[СервисИнтеграции][КаналСервисаИнтеграции]
		.ВыбратьСообщения();
		
	СообщенияШины.Очистить();	
	Для Каждого СообщениеПоиска Из ВсеСообщения Цикл
		
		ТелоСтрокой = ТелоСообщенияСтрокой(СообщениеПоиска);
		Если НЕ СтрНайти(ТелоСтрокой, СтрокаПоиска) = 0 тогда
			ДобавитьСтрокуСообщенийШины(СообщениеПоиска);
		КонецЕсли;
		
	КонецЦикла

КонецПроцедуры

Процедура ДобавитьСтрокуСообщенийШины(СообщениеИнтеграции)
	Перем ПредставлениеСообщения;
	ИмяПараметраПредставления = "Presentation"; //Представление
	ИмяПараметраМетод = "Method"; //Метод
	ИмяПараметраИдентификаторОбъекта = "objectID"; //ИдентификаторОбъекта
	ИмяПараметраВерсия = "Version"; //Версия
	ИмяПараметраТипСодержимого = "ContentType"; //ТипСообщенияОбмена
	
	СтрокаСообщенийШины = СообщенияШины.Добавить();
	СтрокаСообщенийШины.Сообщение =  СообщениеИнтеграции.Идентификатор;
	СтрокаСообщенийШины.Отправитель = СообщениеИнтеграции.КодОтправителя;
	СтрокаСообщенийШины.Получатель = СообщениеИнтеграции.КодПолучателя;
	СтрокаСообщенийШины.РазмерТела = СообщениеИнтеграции.РазмерТела;
	СтрокаСообщенийШины.Запрос = СообщениеИнтеграции.ИдентификаторСообщенияЗапроса;
	СтрокаСообщенийШины.Отправлено = СообщениеИнтеграции.ДатаОтправки;
	СтрокаСообщенийШины.Устареет = СообщениеИнтеграции.ДатаУстаревания;
	СтрокаСообщенийШины.Параметры = ОбщегоНазначения.ЗначениеВСтрокуXML(СообщениеИнтеграции.Параметры);
	
	ПредставлениеСообщения = СообщениеИнтеграции.Параметры.Получить(ИмяПараметраПредставления);
	Если ЗначениеЗаполнено(ПредставлениеСообщения) Тогда
		СтрокаСообщенийШины.Представление = РаскодироватьСтроку(ПредставлениеСообщения, СпособКодированияСтроки.КодировкаURL);
	Иначе
		СтрокаСообщенийШины.Представление = СтандартноеПредставлениеСообщения(СообщениеИнтеграции);
	КонецЕсли;
	
	СтрокаСообщенийШины.Метод = СообщениеИнтеграции.Параметры.Получить(ИмяПараметраМетод);
	СтрокаСообщенийШины.ИдентификаторОбъекта = СообщениеИнтеграции.Параметры.Получить(ИмяПараметраИдентификаторОбъекта);
	СтрокаСообщенийШины.Версия = СообщениеИнтеграции.Параметры.Получить(ИмяПараметраВерсия);
	СтрокаСообщенийШины.ТипСодержимого = СообщениеИнтеграции.Параметры.Получить(ИмяПараметраТипСодержимого);
КонецПроцедуры

Функция ТелоСообщенияСтрокой(Сообщение)

	Если Сообщение.РазмерТела = 0 Тогда
		РазмерБуфера = 1024;
	Иначе
		РазмерБуфера = Сообщение.РазмерТела;
	КонецЕсли;
	
	Тело  = Новый БуферДвоичныхДанных(0);
	Буфер = Новый БуферДвоичныхДанных(РазмерБуфера);
	Поток = Сообщение.ПолучитьТелоКакПоток();
	
	Пока Истина Цикл
		Прочитано = Поток.Прочитать(Буфер, 0, РазмерБуфера);
		Если Прочитано > 0 Тогда
			Тело = Тело.Соединить(Буфер);  
		КонецЕсли;
		Если Прочитано < РазмерБуфера Тогда
			Прервать; 
		КонецЕсли; 
	КонецЦикла;
	
	ТелоСтрокой = ПолучитьСтрокуИзБуфераДвоичныхДанных(Тело);
	Возврат ТелоСтрокой;

КонецФункции

Функция СтандартноеПредставлениеСообщения(СообщениеИнтеграции)
	Результат = СтрШаблон("Сообщение Ид:%1 от %2 для %3 отправленное %4",
					СообщениеИнтеграции.Идентификатор,
					СообщениеИнтеграции.КодОтправителя,
					СообщениеИнтеграции.КодПолучателя,
					СообщениеИнтеграции.ДатаОтправки);
					
	Возврат Результат;
КонецФункции

#КонецОбласти
