#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.СервисИнтеграции = Параметры.СервисИнтеграции;
	ЗаполнитьКаналы();

	СведенияОИсходномСообщении = ЗагрузитьИсходноеСообщение(
		Параметры.СервисИнтеграции, 
		Параметры.КаналСервисаИнтеграции, 
		Параметры.ИДСообщения);
		
		
	ТелоСообщения = СведенияОИсходномСообщении.Тело;
	КодПолучателя = СведенияОИсходномСообщении.КодОтправителя;
	КодОтправителя = СведенияОИсходномСообщении.КодПолучателя;
	ИдентификаторСообщенияЗапроса = СведенияОИсходномСообщении.Идентификатор;
	
	СведенияОИсходномСообщении.Параметры.Удалить("integ_message_id");
	СериализованныеПараметры = ОбщегоНазначения.ЗначениеВСтрокуXML(СведенияОИсходномСообщении.Параметры);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(ИдентификаторСообщенияЗапроса) Тогда
		Если НЕ СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ИдентификаторСообщенияЗапроса) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				"Идентификатор сообщения запроса должен быть в формате GUID",
				,
				"ИдентификаторСообщенияЗапроса",
				,
				Отказ);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	ПеренаправитьСообщениеНаСервере();
	ЭтотОбъект.Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЗагрузитьИсходноеСообщение(СервисИнтеграции, КаналСервисаИнтеграции, ИДСообщения)
	СведенияОСообщении = Новый Структура("Тело, Параметры, КодОтправителя, КодПолучателя, Идентификатор");

	СообщенияПоИд = СервисыИнтеграции[СервисИнтеграции][КаналСервисаИнтеграции]
		.ВыбратьСообщения(Новый Структура("Идентификатор", ИДСообщения));
	Если СообщенияПоИд.Количество() = 0 Тогда
		Сообщить("Сообщение не найдено", СтатусСообщения.Внимание);
		Возврат Неопределено;
	КонецЕсли;
	ИсходноеСообщение = СообщенияПоИд[0];
	
	СведенияОСообщении.Параметры = Новый Соответствие;
	Для Каждого ПараметрИсходногоСообщения Из ИсходноеСообщение.Параметры Цикл
		СведенияОСообщении.Параметры.Вставить(ПараметрИсходногоСообщения.Ключ, ПараметрИсходногоСообщения.Значение);
	КонецЦикла;

	СведенияОСообщении.Тело = ТелоСообщенияСтрокой(ИсходноеСообщение);
	
	СведенияОСообщении.Идентификатор = ИсходноеСообщение.Идентификатор;
	СведенияОСообщении.КодПолучателя = ИсходноеСообщение.КодПолучателя;
	СведенияОСообщении.КодОтправителя = ИсходноеСообщение.КодОтправителя;
	
	Возврат СведенияОСообщении
КонецФункции

&НаСервере
Процедура ПеренаправитьСообщениеНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	Интеграция = СервисыИнтеграции[Объект.СервисИнтеграции];
	
	ОтправляемоеСообщение = Интеграция.СоздатьСообщение();
	ОтправляемоеСообщение.КодОтправителя = ЭтотОбъект.КодОтправителя;
	ОтправляемоеСообщение.КодПолучателя = ЭтотОбъект.КодПолучателя;
	Если ЗначениеЗаполнено(ИдентификаторСообщенияЗапроса) Тогда
		ОтправляемоеСообщение.ИдентификаторСообщенияЗапроса = 
	    	Новый УникальныйИдентификатор(ЭтотОбъект.ИдентификаторСообщенияЗапроса);
	КонецЕсли;

	Если ЗначениеЗаполнено(СериализованныеПараметры) Тогда
		ОтправляемоеСообщение.Параметры = ОбщегоНазначения.ЗначениеИзСтрокиXML(СериализованныеПараметры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТелоСообщения) Тогда
		ОтправляемыйПоток = ОтправляемоеСообщение.ПолучитьТелоКакПоток();
		ТелоБуфером = ПолучитьБуферДвоичныхДанныхИзСтроки(ТелоСообщения);
		ОтправляемыйПоток.Записать(ТелоБуфером, 0, ТелоБуфером.Размер);
		ОтправляемыйПоток.СброситьБуферы();
		ОтправляемыйПоток.Закрыть();
	КонецЕсли;
	

	Интеграция[Объект.КаналСервисаИнтеграции].ОтправитьСообщение(ОтправляемоеСообщение);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТелоСообщенияСтрокой(Знач Сообщение)

	Если Сообщение.РазмерТела = 0 Тогда
		РазмерБуфера = 1024;
	Иначе
		РазмерБуфера = Сообщение.РазмерТела;
	КонецЕсли;
	
	Тело  = Новый БуферДвоичныхДанных(0);
	Буфер = Новый БуферДвоичныхДанных(РазмерБуфера);
	Поток = Сообщение.ПолучитьТелоКакПоток();
	
	Пока Истина Цикл
		Прочитано = Поток.Прочитать(Буфер, 0, РазмерБуфера);
		Если Прочитано > 0 Тогда
			Тело = Тело.Соединить(Буфер);  
		КонецЕсли;
		Если Прочитано < РазмерБуфера Тогда
			Прервать; 
		КонецЕсли; 
	КонецЦикла;
	
	ТелоСтрокой = ПолучитьСтрокуИзБуфераДвоичныхДанных(Тело);
	Возврат ТелоСтрокой;

КонецФункции

&НаСервере
Процедура ЗаполнитьКаналы()
	
	Элементы.КаналСервисаИнтеграции.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(Объект.СервисИнтеграции) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ОбъектМетаданных Из Метаданные.СервисыИнтеграции[Объект.СервисИнтеграции].КаналыСервисаИнтеграции Цикл
		Элементы.КаналСервисаИнтеграции.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним); 
	КонецЦикла;

КонецПроцедуры

#КонецОбласти