&НаКлиенте
Перем ВключенПериодическийОпросКанала;

&НаКлиенте
Перем ВключенПериодическийОпросСервиса;

&НаКлиенте
Перем ВключенПериодическийОпросРегламента;

&НаКлиенте
Перем ПериодичностьОпросаСервиса;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если РазмерВыборкиСообщений = 0 Тогда
		РазмерВыборкиСообщений = 100;
	КонецЕсли;
	Если ПериодичностьОпросаОчереди = 0 Тогда
		ПериодичностьОпросаОчереди = 10;
	КонецЕсли;
	ЗаполнитьОбъектыИнтеграции();
	
	ЗаполнитьРегламентныеЗадания();
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Если Настройки.Получить("Объект.СервисИнтеграции") <> Неопределено Тогда
		Если Метаданные.СервисыИнтеграции.Найти(Объект.СервисИнтеграции) <> Неопределено Тогда
			ЗаполнитьКаналы();
			ПолучитьСведенияОСервисеНаСервере();
		Иначе
			Объект.СервисИнтеграции = "";
		КонецЕсли;
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СервисИнтеграцииПриИзменении(Элемент)
	
	Элементы.КаналСервисаИнтеграции.СписокВыбора.Очистить();
	Объект.СообщенияШины.Очистить();
	Если Не ЗначениеЗаполнено(Объект.СервисИнтеграции) Тогда
		ВыключитьПериодическийОпросКанала();
		ВыключитьПериодическийОпросСервиса();
		Элементы.СервисИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Вопрос32;
		Элементы.СервисИнтеграции.Подсказка = "";
		Возврат;
	КонецЕсли;
	СведенияОКаналах = Новый Массив;
	ЗаполнитьСведенияОКаналахНаСервере(Объект.СервисИнтеграции, СведенияОКаналах);
	Для Каждого СведенияОКанале Из СведенияОКаналах Цикл
		Элементы.КаналСервисаИнтеграции.СписокВыбора.Добавить(СведенияОКанале.Имя, СведенияОКанале.Синоним); 
	КонецЦикла;

	ЭтотОбъект.ПодключитьОбработчикОжидания("ПолучитьАктивностьСервиса", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КаналСервисаИнтеграцииПриИзменении(Элемент)
	
	Объект.СообщенияШины.Очистить();
	Если Не ЗначениеЗаполнено(Объект.КаналСервисаИнтеграции) Тогда
		ВыключитьПериодическийОпросКанала();
		Элементы.КаналСервисаИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Вопрос32;
		Возврат;
	КонецЕсли;

	ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьСообщенияКанала", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.СервисИнтеграции) Или НЕ ЗначениеЗаполнено(Объект.КаналСервисаИнтеграции) Тогда
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьСообщенияКанала", 0.1, Истина);
		Возврат;
	КонецЕсли;
	НайтиПоТекстуНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 

	Если НЕ ЗначениеЗаполнено(Объект.СервисИнтеграции) Или НЕ ЗначениеЗаполнено(Объект.КаналСервисаИнтеграции) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элемент.ТекстРедактирования) Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьСообщенияКанала", 0.1, Истина);
		Возврат;
	КонецЕсли;
	СтрокаПоиска = Элемент.ТекстРедактирования;
	НайтиПоТекстуНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура РегламентноеЗаданиеОбработкиСервисовИнтеграцииПриИзменении(Элемент)

	Если Не ЗначениеЗаполнено(РегламентноеЗаданиеОбработкиСервисовИнтеграции) Тогда
		ВыключитьПериодическийОпросРегламента();
		Элементы.РегламентноеЗаданиеОбработкиСервисовИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Вопрос32;
		Возврат;
	КонецЕсли;

	ЭтотОбъект.ПодключитьОбработчикОжидания("ПолучитьСведенияОРегламенте", 0.1, Истина);

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСообщенияШины

&НаКлиенте
Процедура СообщенияШиныПриАктивизацииСтроки(Элемент)
	ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьТелоСообщения", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СообщенияШиныПередУдалением(Элемент, Отказ)
	УдалитьСообщениеНаСервере(
		Элементы.СообщенияШины.ТекущиеДанные.Сообщение, 
		Объект.СервисИнтеграции, 
		Объект.КаналСервисаИнтеграции);
	ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьСообщенияКанала", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СообщенияШиныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("СервисИнтеграции", Объект.СервисИнтеграции);
	ПараметрыСоздания.Вставить("КаналСервисаИнтеграции", Объект.КаналСервисаИнтеграции);

	ОткрытьФорму(
		"ВнешняяОбработка.СообщенияШины.Форма.ФормаСоздания", 
		ПараметрыСоздания, 
		ЭтотОбъект,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура СообщенияШиныОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрочитатьСообщенияКанала(Команда)
	ПрочитатьСообщенияКаналаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправитьСообщение(Команда)
	
	ПараметрыПеренаправления = Новый Структура;
	ПараметрыПеренаправления.Вставить("ИДСообщения", Элементы.СообщенияШины.ТекущиеДанные.Сообщение);
	ПараметрыПеренаправления.Вставить("СервисИнтеграции", Объект.СервисИнтеграции);
	ПараметрыПеренаправления.Вставить("КаналСервисаИнтеграции", Объект.КаналСервисаИнтеграции);
	
	ОткрытьФорму(
		"ВнешняяОбработка.СообщенияШины.Форма.ФормаПеренаправления", 
		ПараметрыПеренаправления, 
		ЭтотОбъект,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВключитьПериодическийОпросКанала()
	Если НЕ ВключенПериодическийОпросКанала Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ЗагрузитьСообщенияКанала", ПериодичностьОпросаОчереди);
		ВключенПериодическийОпросКанала = Истина;
		//ПоказатьОповещениеПользователя("Есть ПериодическийОпрос");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьПериодическийОпросКанала()
	Если ВключенПериодическийОпросКанала Тогда
		ЭтотОбъект.ОтключитьОбработчикОжидания("ЗагрузитьСообщенияКанала");
		ВключенПериодическийОпросКанала = Ложь;
		//ПоказатьОповещениеПользователя("Нет ПериодическийОпрос");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПериодическийОпросСервиса()
	Если НЕ ВключенПериодическийОпросСервиса Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ПолучитьАктивностьСервиса", ПериодичностьОпросаСервиса);
		ВключенПериодическийОпросСервиса = Истина;
		//ПоказатьОповещениеПользователя("Есть ПериодическийОпрос");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьПериодическийОпросСервиса()
	Если ВключенПериодическийОпросСервиса Тогда
		ЭтотОбъект.ОтключитьОбработчикОжидания("ПолучитьАктивностьСервиса");
		ВключенПериодическийОпросСервиса = Ложь;
		//ПоказатьОповещениеПользователя("Нет ПериодическийОпрос");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВключитьПериодическийОпросРегламента()
	Если НЕ ВключенПериодическийОпросРегламента Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ПолучитьСведенияОРегламенте", ПериодичностьОпросаСервиса);
		ВключенПериодическийОпросРегламента = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьПериодическийОпросРегламента()
	Если ВключенПериодическийОпросРегламента Тогда
		ЭтотОбъект.ОтключитьОбработчикОжидания("ПолучитьСведенияОРегламенте");
		ВключенПериодическийОпросРегламента = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТелоСообщения()
	Если Элементы.СообщенияШины.ТекущиеДанные = Неопределено Тогда
		ТелоСообщения = "";
	Иначе
		ТелоСообщения = ТелоСообщенияНаСервере(
			Элементы.СообщенияШины.ТекущиеДанные.Сообщение, 
			Объект.СервисИнтеграции, 
			Объект.КаналСервисаИнтеграции);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСообщенияКанала()
	ПрочитатьСообщенияКаналаНаСервере();
	ВключитьПериодическийОпросКанала();
	ЭтотОбъект.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАктивностьСервиса()
	ПолучитьСведенияОСервисеНаСервере();
	ВключитьПериодическийОпросСервиса();
	ЭтотОбъект.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСведенияОРегламенте()
	ПолучитьСведенияОРегламентеНаСервере();
	ВключитьПериодическийОпросРегламента();
	ЭтотОбъект.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура НайтиПоТекстуНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.НайтиСообщениеКаналаПоТелу(СтрокаПоиска);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаСервере
Процедура ПрочитатьСообщенияКаналаНаСервере()
	
	Если НЕ ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	СтрокаПоиска = "";
	
	СостояниеКанала = СервисыИнтеграции[Объект.СервисИнтеграции][Объект.КаналСервисаИнтеграции].ПолучитьСостояние();
	Если СостояниеКанала = СостояниеКаналаСервисаИнтеграции.Подключен Тогда
		Элементы.КаналСервисаИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Успешно32;
	ИначеЕсли СостояниеКанала = СостояниеКаналаСервисаИнтеграции.Отключен Тогда
		Элементы.КаналСервисаИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Ошибка32;
	Иначе
		Элементы.КаналСервисаИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.ВниманиеКрасный;
	КонецЕсли;

	ВычислитьКоличествоСообщенийВКанале();

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПолучитьСообщенияКанала(РазмерВыборкиСообщений);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОСервисеНаСервере()
	
	НастройкиСервисаИнтеграции = СервисыИнтеграции[Объект.СервисИнтеграции].ПолучитьНастройки();
	Элементы.СервисИнтеграции.Подсказка = НастройкиСервисаИнтеграции.АдресВнешнегоСервисаИнтеграции;
	
	ЕстьАктивностьСервиса = СервисыИнтеграции[Объект.СервисИнтеграции].ПолучитьАктивность();
	Если ЕстьАктивностьСервиса Тогда
		Элементы.СервисИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Успешно32;
	Иначе
		Элементы.СервисИнтеграции.КартинкаКнопкиВыбора = БиблиотекаКартинок.Ошибка32;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОРегламентеНаСервере()

	

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСведенияОКаналахНаСервере(Знач СервисИнтеграции, СведенияОКаналах)
	Для Каждого ОбъектМетаданных Из Метаданные.СервисыИнтеграции[СервисИнтеграции].КаналыСервисаИнтеграции Цикл
		СведенияОКанале = Новый Структура("Имя, Синоним");
		ЗаполнитьЗначенияСвойств(СведенияОКанале, ОбъектМетаданных);
		СведенияОКаналах.Добавить(СведенияОКанале);
	КонецЦикла
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоКаналПолученияНаСервере(Знач КаналСервисаИнтеграции, Знач СервисИнтеграции)
	
	ЭтоКаналПолучения = 
		Метаданные.СервисыИнтеграции[СервисИнтеграции].КаналыСервисаИнтеграции[КаналСервисаИнтеграции].НаправлениеСообщения = 
			Метаданные.СвойстваОбъектов.НаправлениеСообщенияКаналаСервисаИнтеграции.Получение;
	Возврат ЭтоКаналПолучения;

КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьСообщениеНаСервере(Знач ИДСообщения, Знач СервисИнтеграции, Знач КаналСервисаИнтеграции)
	МассивКУДалению = Новый Массив;
	МассивКУДалению.Добавить(ИДСообщения);
	
	СервисыИнтеграции[СервисИнтеграции][КаналСервисаИнтеграции]
		.УдалитьСообщения(МассивКУДалению);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТелоСообщенияНаСервере(Знач ИДСообщения, Знач СервисИнтеграции, Знач КаналСервисаИнтеграции)
	СообщенияПоИд = СервисыИнтеграции[СервисИнтеграции][КаналСервисаИнтеграции]
		.ВыбратьСообщения(Новый Структура("Идентификатор", ИДСообщения));
	Если СообщенияПоИд.Количество() = 0 Тогда
   		Возврат "";
	КонецЕсли;
	Сообщение = СообщенияПоИд[0];
	
	ТелоСтрокой = ТелоСообщенияСтрокой(Сообщение);

	Возврат ТелоСтрокой;
КонецФункции

&НаСервере
Процедура ЗаполнитьОбъектыИнтеграции()
	
	Для Каждого ОбъектМетаданных Из Метаданные.СервисыИнтеграции Цикл
		Элементы.СервисИнтеграции.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегламентныеЗадания()
	ОписанияЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания();
	Для Каждого Задание Из ОписанияЗаданий Цикл
		Если ПустаяСтрока(Задание.Наименование) Тогда 
			НаименованиеЗадания = Задание.Метаданные.Синоним;
		Иначе
			НаименованиеЗадания = Задание.Наименование;
		КонецЕсли;
		Элементы.РегламентноеЗаданиеОбработкиСервисовИнтеграции.СписокВыбора.Добавить(
			Строка(Задание.УникальныйИдентификатор), 
			НаименованиеЗадания);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ВычислитьКоличествоСообщенийВКанале()
	
	ВсеСообщения = СервисыИнтеграции[Объект.СервисИнтеграции][Объект.КаналСервисаИнтеграции]
		.ВыбратьСообщения();
	Всего = ВсеСообщения.Количество();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ТелоСообщенияСтрокой(Знач Сообщение)

	Если Сообщение.РазмерТела = 0 Тогда
		РазмерБуфера = 1024;
	Иначе
		РазмерБуфера = Сообщение.РазмерТела;
	КонецЕсли;
	
	Тело  = Новый БуферДвоичныхДанных(0);
	Буфер = Новый БуферДвоичныхДанных(РазмерБуфера);
	Поток = Сообщение.ПолучитьТелоКакПоток();
	
	Пока Истина Цикл
		Прочитано = Поток.Прочитать(Буфер, 0, РазмерБуфера);
		Если Прочитано > 0 Тогда
			Тело = Тело.Соединить(Буфер);  
		КонецЕсли;
		Если Прочитано < РазмерБуфера Тогда
			Прервать; 
		КонецЕсли; 
	КонецЦикла;
	
	ТелоСтрокой = ПолучитьСтрокуИзБуфераДвоичныхДанных(Тело);
	Возврат ТелоСтрокой;

КонецФункции


&НаСервере
Процедура ЗаполнитьКаналы()
	
	Элементы.КаналСервисаИнтеграции.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(Объект.СервисИнтеграции) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ОбъектМетаданных Из Метаданные.СервисыИнтеграции[Объект.СервисИнтеграции].КаналыСервисаИнтеграции Цикл
		Элементы.КаналСервисаИнтеграции.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним); 
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РегламентноеЗаданиеОбработкиСервисовИнтеграцииОткрытие(Элемент, СтандартнаяОбработка)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Действие", "Изменить");
	ПараметрыФормы.Вставить("Идентификатор", РегламентноеЗаданиеОбработкиСервисовИнтеграции);

	ОткрытьФорму("Обработка.РегламентныеИФоновыеЗадания.Форма.РегламентноеЗадание", ПараметрыФормы, ЭтотОбъект);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

ВключенПериодическийОпросКанала = Ложь;
ВключенПериодическийОпросСервиса = Ложь;
ВключенПериодическийОпросРегламента = Ложь;
ПериодичностьОпросаСервиса = 5;